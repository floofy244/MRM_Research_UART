

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Feb 27 19:10:40 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     001A                     _RCREG	set	26
   166     000C                     _PIR1bits	set	12
   167     0019                     _TXREG	set	25
   168     0018                     _RCSTAbits	set	24
   169     0098                     _TXSTAbits	set	152
   170     0099                     _SPBRG	set	153
   171     0087                     _TRISCbits	set	135
   172                           
   173                           	psect	strings
   174     0003                     __pstrings:
   175     0003                     stringtab:
   176     0003                     __stringtab:
   177     0003                     stringcode:	
   178                           ;	String table - string pointers are 1 byte each
   179                           
   180     0003                     stringdir:
   181     0003  3000               	movlw	high stringdir
   182     0004  008A               	movwf	10
   183     0005  0804               	movf	4,w
   184     0006  0A84               	incf	4,f
   185     0007  0782               	addwf	2,f
   186     0008                     __stringbase:
   187     0008  3400               	retlw	0
   188     0009                     __end_of__stringtab:
   189     0009                     STR_1:
   190     0009  3452               	retlw	82	;'R'
   191     000A  3465               	retlw	101	;'e'
   192     000B  3463               	retlw	99	;'c'
   193     000C  3465               	retlw	101	;'e'
   194     000D  3469               	retlw	105	;'i'
   195     000E  3476               	retlw	118	;'v'
   196     000F  3465               	retlw	101	;'e'
   197     0010  3464               	retlw	100	;'d'
   198     0011  343A               	retlw	58	;':'
   199     0012  3420               	retlw	32	;' '
   200     0013  3425               	retlw	37	;'%'
   201     0014  3463               	retlw	99	;'c'
   202     0015  340A               	retlw	10
   203     0016  3400               	retlw	0
   204                           
   205                           	psect	cinit
   206     07FC                     start_initialization:	
   207                           ; #config settings
   208                           
   209     07FC                     __initialization:
   210     07FC                     end_of_initialization:	
   211                           ;End of C runtime variable initialization code
   212                           
   213     07FC                     __end_of__initialization:
   214     07FC  0183               	clrf	3
   215     07FD  120A  118A  2F84   	ljmp	_main	;jump to C main() function
   216                           
   217                           	psect	cstackCOMMON
   218     0070                     __pcstackCOMMON:
   219     0070                     ?_putch:
   220     0070                     ??_putch:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0070                     ?_main:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0070                     ?_printf:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     putch@c:	
   230                           ; 2 bytes @ 0x0
   231                           
   232                           
   233                           ; 1 bytes @ 0x0
   234     0070                     	ds	2
   235     0072                     ??_printf:
   236                           
   237                           ; 1 bytes @ 0x2
   238     0072                     	ds	2
   239     0074                     printf@ap:
   240                           
   241                           ; 1 bytes @ 0x4
   242     0074                     	ds	1
   243     0075                     printf@f:
   244                           
   245                           ; 1 bytes @ 0x5
   246     0075                     	ds	1
   247     0076                     printf@c:
   248                           
   249                           ; 1 bytes @ 0x6
   250     0076                     	ds	1
   251     0077                     ??_main:
   252                           
   253                           ; 1 bytes @ 0x7
   254     0077                     	ds	2
   255     0079                     main@received:
   256                           
   257                           ; 1 bytes @ 0x9
   258     0079                     	ds	1
   259                           
   260                           	psect	maintext
   261     0784                     __pmaintext:	
   262 ;;
   263 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   264 ;;
   265 ;; *************** function _main *****************
   266 ;; Defined at:
   267 ;;		line 23 in file "mc2.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;  received        1    9[COMMON] unsigned char 
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   276 ;; Tracked objects:
   277 ;;		On entry : B00/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   281 ;;      Params:         0       0       0       0       0
   282 ;;      Locals:         1       0       0       0       0
   283 ;;      Temps:          2       0       0       0       0
   284 ;;      Totals:         3       0       0       0       0
   285 ;;Total ram usage:        3 bytes
   286 ;; Hardware stack levels required when called: 2
   287 ;; This function calls:
   288 ;;		_printf
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294     0784                     _main:	
   295                           ;psect for function _main
   296                           
   297     0784                     l728:	
   298                           ;incstack = 0
   299                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   300                           
   301                           
   302                           ;mc2.c: 25:     TRISCbits.TRISC6 = 0;
   303     0784  1683               	bsf	3,5	;RP0=1, select bank1
   304     0785  1303               	bcf	3,6	;RP1=0, select bank1
   305     0786  1307               	bcf	7,6	;volatile
   306                           
   307                           ;mc2.c: 26:     TRISCbits.TRISC7 = 1;
   308     0787  1787               	bsf	7,7	;volatile
   309     0788                     l730:
   310                           
   311                           ;mc2.c: 28:     SPBRG = 25;
   312     0788  3019               	movlw	25
   313     0789  0099               	movwf	25	;volatile
   314     078A                     l732:
   315                           
   316                           ;mc2.c: 29:     TXSTAbits.BRGH = 1;
   317     078A  1518               	bsf	24,2	;volatile
   318     078B                     l734:
   319                           
   320                           ;mc2.c: 30:     TXSTAbits.SYNC = 0;
   321     078B  1218               	bcf	24,4	;volatile
   322     078C                     l736:
   323                           
   324                           ;mc2.c: 31:     RCSTAbits.SPEN = 1;
   325     078C  1283               	bcf	3,5	;RP0=0, select bank0
   326     078D  1303               	bcf	3,6	;RP1=0, select bank0
   327     078E  1798               	bsf	24,7	;volatile
   328     078F                     l22:
   329     078F  1683               	bsf	3,5	;RP0=1, select bank1
   330     0790  1303               	bcf	3,6	;RP1=0, select bank1
   331     0791  1C98               	btfss	24,1	;volatile
   332     0792  2F94               	goto	u71
   333     0793  2F95               	goto	u70
   334     0794                     u71:
   335     0794  2F8F               	goto	l22
   336     0795                     u70:
   337     0795                     l738:
   338                           
   339                           ;mc2.c: 36:         TXREG = 'A';
   340     0795  3041               	movlw	65
   341     0796  1283               	bcf	3,5	;RP0=0, select bank0
   342     0797  1303               	bcf	3,6	;RP1=0, select bank0
   343     0798  0099               	movwf	25	;volatile
   344     0799                     l25:	
   345                           ;mc2.c: 37:         while (!PIR1bits.RCIF);
   346                           
   347     0799  1E8C               	btfss	12,5	;volatile
   348     079A  2F9C               	goto	u81
   349     079B  2F9D               	goto	u80
   350     079C                     u81:
   351     079C  2F99               	goto	l25
   352     079D                     u80:
   353     079D                     l740:
   354                           
   355                           ;mc2.c: 38:         char received = RCREG;
   356     079D  081A               	movf	26,w	;volatile
   357     079E  00F9               	movwf	main@received
   358     079F                     l742:
   359                           
   360                           ;mc2.c: 39:         printf("Received: %c\n", received);
   361     079F  0879               	movf	main@received,w
   362     07A0  00F7               	movwf	??_main
   363     07A1  01F8               	clrf	??_main+1
   364     07A2  0877               	movf	??_main,w
   365     07A3  00F0               	movwf	?_printf
   366     07A4  0878               	movf	??_main+1,w
   367     07A5  00F1               	movwf	?_printf+1
   368     07A6  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   369     07A7  120A  118A  27B0  120A  118A  	fcall	_printf
   370     07AC  2F8F               	goto	l22
   371     07AD  120A  118A  2800   	ljmp	start
   372     07B0                     __end_of_main:
   373                           
   374                           	psect	text1
   375     07B0                     __ptext1:	
   376 ;; *************** function _printf *****************
   377 ;; Defined at:
   378 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;  f               1    wreg     PTR const unsigned char 
   381 ;;		 -> STR_1(14), 
   382 ;; Auto vars:     Size  Location     Type
   383 ;;  f               1    5[COMMON] PTR const unsigned char 
   384 ;;		 -> STR_1(14), 
   385 ;;  tmpval          4    0        struct .
   386 ;;  cp              2    0        PTR const unsigned char 
   387 ;;  len             2    0        unsigned int 
   388 ;;  val             2    0        unsigned int 
   389 ;;  c               1    6[COMMON] unsigned char 
   390 ;;  ap              1    4[COMMON] PTR void [1]
   391 ;;		 -> ?_printf(2), 
   392 ;;  flag            1    0        unsigned char 
   393 ;;  prec            1    0        char 
   394 ;; Return value:  Size  Location     Type
   395 ;;                  2    0[COMMON] int 
   396 ;; Registers used:
   397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         2       0       0       0       0
   404 ;;      Locals:         3       0       0       0       0
   405 ;;      Temps:          2       0       0       0       0
   406 ;;      Totals:         7       0       0       0       0
   407 ;;Total ram usage:        7 bytes
   408 ;; Hardware stack levels used: 1
   409 ;; Hardware stack levels required when called: 1
   410 ;; This function calls:
   411 ;;		_putch
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417     07B0                     _printf:	
   418                           ;psect for function _printf
   419                           
   420                           
   421                           ;incstack = 0
   422                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   423                           ;printf@f stored from wreg
   424     07B0  00F5               	movwf	printf@f
   425     07B1                     l704:
   426                           
   427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
   428     07B1  3070               	movlw	(low (?_printf| 0))& (0+255)
   429     07B2  00F4               	movwf	printf@ap
   430                           
   431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   432     07B3  2FEB               	goto	l722
   433     07B4                     l706:
   434                           
   435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   436     07B4  3025               	movlw	37
   437     07B5  0676               	xorwf	printf@c,w
   438     07B6  1903               	btfsc	3,2
   439     07B7  2FB9               	goto	u51
   440     07B8  2FBA               	goto	u50
   441     07B9                     u51:
   442     07B9  2FC1               	goto	l710
   443     07BA                     u50:
   444     07BA                     l708:
   445                           
   446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
   447     07BA  0876               	movf	printf@c,w
   448     07BB  120A  118A  2783  120A  118A  	fcall	_putch
   449                           
   450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
   451     07C0  2FEB               	goto	l722
   452     07C1                     l710:
   453                           
   454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   455     07C1  2FD1               	goto	l720
   456     07C2                     l712:
   457                           
   458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
   459     07C2  0874               	movf	printf@ap,w
   460     07C3  0084               	movwf	4
   461     07C4  0800               	movf	0,w
   462     07C5  00F6               	movwf	printf@c
   463     07C6                     l714:
   464     07C6  3002               	movlw	2
   465     07C7  00F2               	movwf	??_printf
   466     07C8  0872               	movf	??_printf,w
   467     07C9  07F4               	addwf	printf@ap,f
   468     07CA                     l716:
   469                           
   470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 835:    (putch(c)
      +                           );
   471     07CA  0876               	movf	printf@c,w
   472     07CB  120A  118A  2783  120A  118A  	fcall	_putch
   473                           
   474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 836:    continue;
   475     07D0  2FEB               	goto	l722
   476     07D1                     l720:
   477     07D1  3001               	movlw	1
   478     07D2  07F5               	addwf	printf@f,f
   479     07D3  30FF               	movlw	-1
   480     07D4  0775               	addwf	printf@f,w
   481     07D5  0084               	movwf	4
   482     07D6  120A  118A  2003  120A  118A  	fcall	stringdir
   483     07DB  00F6               	movwf	printf@c
   484     07DC  00F2               	movwf	??_printf
   485     07DD  01F3               	clrf	??_printf+1
   486                           
   487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   488                           ; Switch size 1, requested type "simple"
   489                           ; Number of cases is 1, Range of values is 0 to 0
   490                           ; switch strategies available:
   491                           ; Name         Instructions Cycles
   492                           ; simple_byte            4     3 (average)
   493                           ; direct_byte           11     8 (fixed)
   494                           ; jumptable            260     6 (fixed)
   495                           ;	Chosen strategy is simple_byte
   496     07DE  0873               	movf	??_printf+1,w
   497     07DF  3A00               	xorlw	0	; case 0
   498     07E0  1903               	skipnz
   499     07E1  2FE3               	goto	l764
   500     07E2  2FCA               	goto	l716
   501     07E3                     l764:
   502                           
   503                           ; Switch size 1, requested type "simple"
   504                           ; Number of cases is 2, Range of values is 0 to 99
   505                           ; switch strategies available:
   506                           ; Name         Instructions Cycles
   507                           ; simple_byte            7     4 (average)
   508                           ; jumptable            260     6 (fixed)
   509                           ;	Chosen strategy is simple_byte
   510     07E3  0872               	movf	??_printf,w
   511     07E4  3A00               	xorlw	0	; case 0
   512     07E5  1903               	skipnz
   513     07E6  2FFB               	goto	l131
   514     07E7  3A63               	xorlw	99	; case 99
   515     07E8  1903               	skipnz
   516     07E9  2FC2               	goto	l712
   517     07EA  2FCA               	goto	l716
   518     07EB                     l722:
   519                           
   520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   521     07EB  3001               	movlw	1
   522     07EC  07F5               	addwf	printf@f,f
   523     07ED  30FF               	movlw	-1
   524     07EE  0775               	addwf	printf@f,w
   525     07EF  0084               	movwf	4
   526     07F0  120A  118A  2003  120A  118A  	fcall	stringdir
   527     07F5  00F6               	movwf	printf@c
   528     07F6  0876               	movf	printf@c,w
   529     07F7  1D03               	btfss	3,2
   530     07F8  2FFA               	goto	u61
   531     07F9  2FFB               	goto	u60
   532     07FA                     u61:
   533     07FA  2FB4               	goto	l706
   534     07FB                     u60:
   535     07FB                     l131:
   536     07FB  0008               	return
   537     07FC                     __end_of_printf:
   538                           
   539                           	psect	text2
   540     0783                     __ptext2:	
   541 ;; *************** function _putch *****************
   542 ;; Defined at:
   543 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\putch.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;  c               1    wreg     unsigned char 
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  c               1    0[COMMON] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   557 ;;      Params:         0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0
   560 ;;      Totals:         0       0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_printf
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570     0783                     _putch:	
   571                           ;psect for function _putch
   572                           
   573     0783                     l586:	
   574                           ;incstack = 0
   575                           ; Regs used in _putch: [wreg]
   576                           
   577     0783  0008               	return
   578     0784                     __end_of_putch:
   579     007E                     btemp	set	126	;btemp
   580     007E                     wtemp0	set	126
   581                           
   582                           	psect	idloc
   583                           
   584                           ;Config register IDLOC0 @ 0x2000
   585                           ;	unspecified, using default values
   586     2000                     	org	8192
   587     2000  3FFF               	dw	16383
   588                           
   589                           ;Config register IDLOC1 @ 0x2001
   590                           ;	unspecified, using default values
   591     2001                     	org	8193
   592     2001  3FFF               	dw	16383
   593                           
   594                           ;Config register IDLOC2 @ 0x2002
   595                           ;	unspecified, using default values
   596     2002                     	org	8194
   597     2002  3FFF               	dw	16383
   598                           
   599                           ;Config register IDLOC3 @ 0x2003
   600                           ;	unspecified, using default values
   601     2003                     	org	8195
   602     2003  3FFF               	dw	16383
   603                           
   604                           	psect	config
   605                           
   606                           ;Config register CONFIG @ 0x2007
   607                           ;	Oscillator Selection bits
   608                           ;	FOSC = HS, HS oscillator
   609                           ;	Watchdog Timer Enable bit
   610                           ;	WDTE = OFF, WDT disabled
   611                           ;	Power-up Timer Enable bit
   612                           ;	PWRTE = OFF, PWRT disabled
   613                           ;	FLASH Program Memory Code Protection bits
   614                           ;	CP = OFF, Code protection off
   615                           ;	Brown-out Reset Enable bit
   616                           ;	BOREN = ON, BOR enabled
   617                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   618                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   619                           ;	Data EE Memory Code Protection
   620                           ;	CPD = OFF, Code Protection off
   621                           ;	FLASH Program Memory Write Enable
   622                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
   623                           ;	In-Circuit Debugger Mode bit
   624                           ;	DEBUG = 0x1, unprogrammed default
   625     2007                     	org	8199
   626     2007  3D7A               	dw	15738

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     194
                                              7 COMMON     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    17      2     171
                                              0 COMMON     7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Feb 27 19:10:40 2023

                      pc 0002                       l22 078F                       l25 0799  
                     u50 07BA                       u51 07B9                       u60 07FB  
                     u61 07FA                       u70 0795                       u71 0794  
                     u80 079D                       u81 079C                       fsr 0004  
                    l131 07FB                      l710 07C1                      l712 07C2  
                    l720 07D1                      l704 07B1                      l714 07C6  
                    l706 07B4                      l722 07EB                      l730 0788  
                    l716 07CA                      l708 07BA                      l740 079D  
                    l732 078A                      l742 079F                      l734 078B  
                    l736 078C                      l728 0784                      l586 0783  
                    l738 0795                      l764 07E3                      fsr0 0004  
                    indf 0000                     STR_1 0009                     _main 0784  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _RCREG 001A                    _SPBRG 0099                    _TXREG 0019  
           main@received 0079                    _putch 0783                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07B0                   ??_main 0077                   ?_putch 0070  
                 _printf 07B0                   putch@c 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_putch 0784                  ??_putch 0070  
             __pmaintext 0784                  ?_printf 0070               __stringtab 0003  
                __ptext1 07B0                  __ptext2 0783     end_of_initialization 07FC  
              _RCSTAbits 0018                  printf@c 0076                  printf@f 0075  
              _TRISCbits 0087                _TXSTAbits 0098           __end_of_printf 07FC  
    start_initialization 07FC                 ??_printf 0072                ___latbits 0002  
              __pstrings 0003                 _PIR1bits 000C              __stringbase 0008  
     __end_of__stringtab 0009                stringcode 0003                 printf@ap 0074  
               stringdir 0003                 stringtab 0003  
