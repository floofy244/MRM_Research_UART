

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Feb 27 19:23:00 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0008                     _PORTDbits	set	8
   168     001A                     _RCREG	set	26
   169     0019                     _TXREG	set	25
   170     0065                     _RCIF	set	101
   171     00C1                     _OERR	set	193
   172     0064                     _TXIF	set	100
   173     005E                     _PEIE	set	94
   174     005F                     _GIE	set	95
   175     00C4                     _CREN	set	196
   176     00C6                     _RX9	set	198
   177     00C7                     _SPEN	set	199
   178     0088                     _TRISDbits	set	136
   179     0099                     _SPBRG	set	153
   180     0464                     _TXIE	set	1124
   181     0465                     _RCIE	set	1125
   182     04C5                     _TXEN	set	1221
   183     04C6                     _TX9	set	1222
   184     04C4                     _SYNC	set	1220
   185     04C2                     _BRGH	set	1218
   186     043F                     _TRISC7	set	1087
   187     043E                     _TRISC6	set	1086
   188                           
   189                           	psect	strings
   190     0003                     __pstrings:
   191     0003                     stringtab:
   192     0003                     __stringtab:
   193     0003                     stringcode:	
   194                           ;	String table - string pointers are 1 byte each
   195                           
   196     0003                     stringdir:
   197     0003  3000               	movlw	high stringdir
   198     0004  008A               	movwf	10
   199     0005  0804               	movf	4,w
   200     0006  0A84               	incf	4,f
   201     0007  0782               	addwf	2,f
   202     0008                     __stringbase:
   203     0008  3400               	retlw	0
   204     0009                     __end_of__stringtab:
   205     0009                     STR_1:
   206     0009  3448               	retlw	72	;'H'
   207     000A  3465               	retlw	101	;'e'
   208     000B  346C               	retlw	108	;'l'
   209     000C  346C               	retlw	108	;'l'
   210     000D  346F               	retlw	111	;'o'
   211     000E  3420               	retlw	32	;' '
   212     000F  3472               	retlw	114	;'r'
   213     0010  3469               	retlw	105	;'i'
   214     0011  3474               	retlw	116	;'t'
   215     0012  3469               	retlw	105	;'i'
   216     0013  346B               	retlw	107	;'k'
   217     0014  3461               	retlw	97	;'a'
   218     0015  3420               	retlw	32	;' '
   219     0016  3479               	retlw	121	;'y'
   220     0017  3465               	retlw	101	;'e'
   221     0018  3468               	retlw	104	;'h'
   222     0019  3420               	retlw	32	;' '
   223     001A  3463               	retlw	99	;'c'
   224     001B  3468               	retlw	104	;'h'
   225     001C  3461               	retlw	97	;'a'
   226     001D  346C               	retlw	108	;'l'
   227     001E  3420               	retlw	32	;' '
   228     001F  3472               	retlw	114	;'r'
   229     0020  3468               	retlw	104	;'h'
   230     0021  3461               	retlw	97	;'a'
   231     0022  3420               	retlw	32	;' '
   232     0023  3468               	retlw	104	;'h'
   233     0024  3420               	retlw	32	;' '
   234     0025  3400               	retlw	0
   235     0026                     STR_3:
   236     0026  3420               	retlw	32	;' '
   237     0027  3445               	retlw	69	;'E'
   238     0028  346E               	retlw	110	;'n'
   239     0029  3474               	retlw	116	;'t'
   240     002A  3465               	retlw	101	;'e'
   241     002B  3472               	retlw	114	;'r'
   242     002C  3420               	retlw	32	;' '
   243     002D  344E               	retlw	78	;'N'
   244     002E  3465               	retlw	101	;'e'
   245     002F  3477               	retlw	119	;'w'
   246     0030  3420               	retlw	32	;' '
   247     0031  3456               	retlw	86	;'V'
   248     0032  3461               	retlw	97	;'a'
   249     0033  346C               	retlw	108	;'l'
   250     0034  3475               	retlw	117	;'u'
   251     0035  3465               	retlw	101	;'e'
   252     0036  3420               	retlw	32	;' '
   253     0037  343D               	retlw	61	;'='
   254     0038  3420               	retlw	32	;' '
   255     0039  3400               	retlw	0
   256     003A                     STR_4:
   257     003A  3420               	retlw	32	;' '
   258     003B  3452               	retlw	82	;'R'
   259     003C  3445               	retlw	69	;'E'
   260     003D  3444               	retlw	68	;'D'
   261     003E  3420               	retlw	32	;' '
   262     003F  344C               	retlw	76	;'L'
   263     0040  3445               	retlw	69	;'E'
   264     0041  3444               	retlw	68	;'D'
   265     0042  3420               	retlw	32	;' '
   266     0043  344F               	retlw	79	;'O'
   267     0044  3446               	retlw	70	;'F'
   268     0045  3446               	retlw	70	;'F'
   269     0046  3420               	retlw	32	;' '
   270     0047  3400               	retlw	0
   271     0048                     STR_2:
   272     0048  3420               	retlw	32	;' '
   273     0049  3452               	retlw	82	;'R'
   274     004A  3445               	retlw	69	;'E'
   275     004B  3444               	retlw	68	;'D'
   276     004C  3420               	retlw	32	;' '
   277     004D  344C               	retlw	76	;'L'
   278     004E  3445               	retlw	69	;'E'
   279     004F  3444               	retlw	68	;'D'
   280     0050  3420               	retlw	32	;' '
   281     0051  344F               	retlw	79	;'O'
   282     0052  344E               	retlw	78	;'N'
   283     0053  3420               	retlw	32	;' '
   284     0054  3400               	retlw	0
   285     0026                     
   286                           	psect	cinit
   287     07FC                     start_initialization:	
   288                           ; #config settings
   289                           
   290     07FC                     __initialization:
   291     07FC                     end_of_initialization:	
   292                           ;End of C runtime variable initialization code
   293                           
   294     07FC                     __end_of__initialization:
   295     07FC  0183               	clrf	3
   296     07FD  120A  118A  2FA4   	ljmp	_main	;jump to C main() function
   297                           
   298                           	psect	cstackCOMMON
   299     0070                     __pcstackCOMMON:
   300     0070                     ?_UART_Init:
   301     0070                     ??_UART_Init:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ?_UART_Write:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ??_UART_Write:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     ?_UART_Read:	
   311                           ; 1 bytes @ 0x0
   312                           
   313     0070                     ??_UART_Read:	
   314                           ; 1 bytes @ 0x0
   315                           
   316     0070                     ?_UART_Write_Text:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0070                     ?_main:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0070                     UART_Write@ch:	
   323                           ; 1 bytes @ 0x0
   324                           
   325                           
   326                           ; 1 bytes @ 0x0
   327     0070                     	ds	1
   328     0071                     ??_UART_Write_Text:
   329                           
   330                           ; 1 bytes @ 0x1
   331     0071                     	ds	1
   332     0072                     UART_Write_Text@st_print:
   333                           
   334                           ; 1 bytes @ 0x2
   335     0072                     	ds	1
   336     0073                     ??_main:
   337                           
   338                           ; 1 bytes @ 0x3
   339     0073                     	ds	2
   340     0075                     main@Enter_value:
   341                           
   342                           ; 2 bytes @ 0x5
   343     0075                     	ds	2
   344                           
   345                           	psect	maintext
   346     07A4                     __pmaintext:	
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 65 in file "newfile.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  Enter_value     2    5[COMMON] int 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : B00/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         0       0       0       0       0
   367 ;;      Locals:         2       0       0       0       0
   368 ;;      Temps:          2       0       0       0       0
   369 ;;      Totals:         4       0       0       0       0
   370 ;;Total ram usage:        4 bytes
   371 ;; Hardware stack levels required when called: 2
   372 ;; This function calls:
   373 ;;		_UART_Init
   374 ;;		_UART_Read
   375 ;;		_UART_Write
   376 ;;		_UART_Write_Text
   377 ;; This function is called by:
   378 ;;		Startup code after reset
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382     07A4                     _main:	
   383                           ;psect for function _main
   384                           
   385     07A4                     l742:	
   386                           ;incstack = 0
   387                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   388                           
   389                           
   390                           ;newfile.c: 67: TRISDbits.TRISD0=0;
   391     07A4  1683               	bsf	3,5	;RP0=1, select bank1
   392     07A5  1303               	bcf	3,6	;RP1=0, select bank1
   393     07A6  1008               	bcf	8,0	;volatile
   394                           
   395                           ;newfile.c: 68: PORTDbits.RD0=0;
   396     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   397     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   398     07A9  1008               	bcf	8,0	;volatile
   399     07AA                     l744:
   400                           
   401                           ;newfile.c: 69: UART_Init();
   402     07AA  120A  118A  276B  120A  118A  	fcall	_UART_Init
   403     07AF                     l746:
   404                           
   405                           ;newfile.c: 70: UART_Write_Text("Hello ritika yeh chal rha h ");
   406     07AF  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   407     07B0  120A  118A  2785  120A  118A  	fcall	_UART_Write_Text
   408     07B5                     l748:
   409                           
   410                           ;newfile.c: 75:     {;newfile.c: 76:       Enter_value = UART_Read();
   411     07B5  120A  118A  275D  120A  118A  	fcall	_UART_Read
   412     07BA  00F3               	movwf	??_main
   413     07BB  01F4               	clrf	??_main+1
   414     07BC  0873               	movf	??_main,w
   415     07BD  00F5               	movwf	main@Enter_value
   416     07BE  0874               	movf	??_main+1,w
   417     07BF  00F6               	movwf	main@Enter_value+1
   418     07C0                     l750:
   419                           
   420                           ;newfile.c: 78:         if (Enter_value == '1')
   421     07C0  3031               	movlw	49
   422     07C1  0675               	xorwf	main@Enter_value,w
   423     07C2  0476               	iorwf	main@Enter_value+1,w
   424     07C3  1D03               	btfss	3,2
   425     07C4  2FC6               	goto	u81
   426     07C5  2FC7               	goto	u80
   427     07C6                     u81:
   428     07C6  2FDC               	goto	l758
   429     07C7                     u80:
   430     07C7                     l752:
   431                           
   432                           ;newfile.c: 79:         {;newfile.c: 80:             PORTDbits.RD0=1;
   433     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   434     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   435     07C9  1408               	bsf	8,0	;volatile
   436     07CA                     l754:
   437                           
   438                           ;newfile.c: 81:             UART_Write_Text(" RED LED ON ");
   439     07CA  3040               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   440     07CB  120A  118A  2785  120A  118A  	fcall	_UART_Write_Text
   441                           
   442                           ;newfile.c: 82:             UART_Write_Text(" Enter New Value = ");
   443     07D0  301E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   444     07D1  120A  118A  2785  120A  118A  	fcall	_UART_Write_Text
   445     07D6                     l756:
   446                           
   447                           ;newfile.c: 83:             UART_Write(10);
   448     07D6  300A               	movlw	10
   449     07D7  120A  118A  2753  120A  118A  	fcall	_UART_Write
   450     07DC                     l758:
   451                           
   452                           ;newfile.c: 86:         if (Enter_value == '0')
   453     07DC  3030               	movlw	48
   454     07DD  0675               	xorwf	main@Enter_value,w
   455     07DE  0476               	iorwf	main@Enter_value+1,w
   456     07DF  1D03               	btfss	3,2
   457     07E0  2FE2               	goto	u91
   458     07E1  2FE3               	goto	u90
   459     07E2                     u91:
   460     07E2  2FB5               	goto	l748
   461     07E3                     u90:
   462     07E3                     l760:
   463                           
   464                           ;newfile.c: 87:         {;newfile.c: 88:            PORTDbits.RD0=0;
   465     07E3  1283               	bcf	3,5	;RP0=0, select bank0
   466     07E4  1303               	bcf	3,6	;RP1=0, select bank0
   467     07E5  1008               	bcf	8,0	;volatile
   468     07E6                     l762:
   469                           
   470                           ;newfile.c: 89:            UART_Write_Text(" RED LED OFF ");
   471     07E6  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   472     07E7  120A  118A  2785  120A  118A  	fcall	_UART_Write_Text
   473                           
   474                           ;newfile.c: 90:            UART_Write_Text(" Enter New Value = ");
   475     07EC  301E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   476     07ED  120A  118A  2785  120A  118A  	fcall	_UART_Write_Text
   477     07F2                     l764:
   478                           
   479                           ;newfile.c: 91:            UART_Write(10);
   480     07F2  300A               	movlw	10
   481     07F3  120A  118A  2753  120A  118A  	fcall	_UART_Write
   482     07F8  2FB5               	goto	l748
   483     07F9  120A  118A  2800   	ljmp	start
   484     07FC                     __end_of_main:
   485                           
   486                           	psect	text1
   487     0785                     __ptext1:	
   488 ;; *************** function _UART_Write_Text *****************
   489 ;; Defined at:
   490 ;;		line 60 in file "newfile.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;  st_print        1    wreg     PTR unsigned char 
   493 ;;		 -> STR_5(20), STR_4(14), STR_3(20), STR_2(13), 
   494 ;;		 -> STR_1(29), 
   495 ;; Auto vars:     Size  Location     Type
   496 ;;  st_print        1    2[COMMON] PTR unsigned char 
   497 ;;		 -> STR_5(20), STR_4(14), STR_3(20), STR_2(13), 
   498 ;;		 -> STR_1(29), 
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   508 ;;      Params:         0       0       0       0       0
   509 ;;      Locals:         1       0       0       0       0
   510 ;;      Temps:          1       0       0       0       0
   511 ;;      Totals:         2       0       0       0       0
   512 ;;Total ram usage:        2 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; Hardware stack levels required when called: 1
   515 ;; This function calls:
   516 ;;		_UART_Write
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522     0785                     _UART_Write_Text:	
   523                           ;psect for function _UART_Write_Text
   524                           
   525                           
   526                           ;incstack = 0
   527                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   528                           ;UART_Write_Text@st_print stored from wreg
   529     0785  00F2               	movwf	UART_Write_Text@st_print
   530     0786                     l734:
   531                           
   532                           ;newfile.c: 60: void UART_Write_Text(char* st_print);newfile.c: 61: {;newfile.c: 62:    
      +                           while(*st_print)
   533     0786  2F97               	goto	l740
   534     0787                     l736:
   535                           
   536                           ;newfile.c: 63:         UART_Write(*st_print++);
   537     0787  0872               	movf	UART_Write_Text@st_print,w
   538     0788  0084               	movwf	4
   539     0789  120A  118A  2003  120A  118A  	fcall	stringdir
   540     078E  120A  118A  2753  120A  118A  	fcall	_UART_Write
   541     0793                     l738:
   542     0793  3001               	movlw	1
   543     0794  00F1               	movwf	??_UART_Write_Text
   544     0795  0871               	movf	??_UART_Write_Text,w
   545     0796  07F2               	addwf	UART_Write_Text@st_print,f
   546     0797                     l740:
   547                           
   548                           ;newfile.c: 62:     while(*st_print)
   549     0797  0872               	movf	UART_Write_Text@st_print,w
   550     0798  0084               	movwf	4
   551     0799  120A  118A  2003  120A  118A  	fcall	stringdir
   552     079E  3A00               	xorlw	0
   553     079F  1D03               	skipz
   554     07A0  2FA2               	goto	u71
   555     07A1  2FA3               	goto	u70
   556     07A2                     u71:
   557     07A2  2F87               	goto	l736
   558     07A3                     u70:
   559     07A3                     l64:
   560     07A3  0008               	return
   561     07A4                     __end_of_UART_Write_Text:
   562                           
   563                           	psect	text2
   564     0753                     __ptext2:	
   565 ;; *************** function _UART_Write *****************
   566 ;; Defined at:
   567 ;;		line 43 in file "newfile.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  ch              1    wreg     unsigned char 
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  ch              1    0[COMMON] unsigned char 
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   581 ;;      Params:         0       0       0       0       0
   582 ;;      Locals:         1       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0
   584 ;;      Totals:         1       0       0       0       0
   585 ;;Total ram usage:        1 bytes
   586 ;; Hardware stack levels used: 1
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_UART_Write_Text
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595     0753                     _UART_Write:	
   596                           ;psect for function _UART_Write
   597                           
   598                           
   599                           ;incstack = 0
   600                           ; Regs used in _UART_Write: [wreg]
   601                           ;UART_Write@ch stored from wreg
   602     0753  00F0               	movwf	UART_Write@ch
   603     0754                     l666:
   604     0754                     l48:	
   605                           ;newfile.c: 43: void UART_Write(char ch);newfile.c: 44: {;newfile.c: 45:     while(!TXIF
      +                          );
   606                           
   607     0754  1283               	bcf	3,5	;RP0=0, select bank0
   608     0755  1303               	bcf	3,6	;RP1=0, select bank0
   609     0756  1E0C               	btfss	12,4	;volatile
   610     0757  2F59               	goto	u11
   611     0758  2F5A               	goto	u10
   612     0759                     u11:
   613     0759  2F54               	goto	l48
   614     075A                     u10:
   615     075A                     l668:
   616                           
   617                           ;newfile.c: 46:     TXREG = ch;
   618     075A  0870               	movf	UART_Write@ch,w
   619     075B  0099               	movwf	25	;volatile
   620     075C                     l51:
   621     075C  0008               	return
   622     075D                     __end_of_UART_Write:
   623                           
   624                           	psect	text3
   625     075D                     __ptext3:	
   626 ;; *************** function _UART_Read *****************
   627 ;; Defined at:
   628 ;;		line 49 in file "newfile.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      unsigned char 
   635 ;; Registers used:
   636 ;;		wreg
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655     075D                     _UART_Read:	
   656                           ;psect for function _UART_Read
   657                           
   658     075D                     l694:	
   659                           ;incstack = 0
   660                           ; Regs used in _UART_Read: [wreg]
   661                           
   662                           
   663                           ;newfile.c: 51:     if(OERR)
   664     075D  1283               	bcf	3,5	;RP0=0, select bank0
   665     075E  1303               	bcf	3,6	;RP1=0, select bank0
   666     075F  1C98               	btfss	24,1	;volatile
   667     0760  2F62               	goto	u21
   668     0761  2F63               	goto	u20
   669     0762                     u21:
   670     0762  2F65               	goto	l55
   671     0763                     u20:
   672     0763                     l696:
   673                           
   674                           ;newfile.c: 52:     {;newfile.c: 53:         CREN = 0;
   675     0763  1218               	bcf	24,4	;volatile
   676                           
   677                           ;newfile.c: 54:         CREN = 1;
   678     0764  1618               	bsf	24,4	;volatile
   679     0765                     l55:
   680     0765  1E8C               	btfss	12,5	;volatile
   681     0766  2F68               	goto	u31
   682     0767  2F69               	goto	u30
   683     0768                     u31:
   684     0768  2F65               	goto	l55
   685     0769                     u30:
   686     0769                     l698:
   687                           
   688                           ;newfile.c: 57:     return RCREG;
   689     0769  081A               	movf	26,w	;volatile
   690     076A                     l58:
   691     076A  0008               	return
   692     076B                     __end_of_UART_Read:
   693                           
   694                           	psect	text4
   695     076B                     __ptext4:	
   696 ;; *************** function _UART_Init *****************
   697 ;; Defined at:
   698 ;;		line 12 in file "newfile.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   712 ;;      Params:         0       0       0       0       0
   713 ;;      Locals:         0       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0
   715 ;;      Totals:         0       0       0       0       0
   716 ;;Total ram usage:        0 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725     076B                     _UART_Init:	
   726                           ;psect for function _UART_Init
   727                           
   728     076B                     l670:	
   729                           ;incstack = 0
   730                           ; Regs used in _UART_Init: [wreg]
   731                           
   732                           
   733                           ;newfile.c: 15:     TRISC6=1;
   734     076B  1683               	bsf	3,5	;RP0=1, select bank1
   735     076C  1303               	bcf	3,6	;RP1=0, select bank1
   736     076D  1707               	bsf	7,6	;volatile
   737                           
   738                           ;newfile.c: 16:     TRISC7=1;
   739     076E  1787               	bsf	7,7	;volatile
   740                           
   741                           ;newfile.c: 19:     BRGH=1;
   742     076F  1518               	bsf	24,2	;volatile
   743     0770                     l672:
   744                           
   745                           ;newfile.c: 20:     SPBRG =129;
   746     0770  3081               	movlw	129
   747     0771  0099               	movwf	25	;volatile
   748     0772                     l674:
   749                           
   750                           ;newfile.c: 23:     SYNC=0;
   751     0772  1218               	bcf	24,4	;volatile
   752     0773                     l676:
   753                           
   754                           ;newfile.c: 24:     SPEN=1;
   755     0773  1283               	bcf	3,5	;RP0=0, select bank0
   756     0774  1303               	bcf	3,6	;RP1=0, select bank0
   757     0775  1798               	bsf	24,7	;volatile
   758     0776                     l678:
   759                           
   760                           ;newfile.c: 27:     RX9=0;
   761     0776  1318               	bcf	24,6	;volatile
   762     0777                     l680:
   763                           
   764                           ;newfile.c: 28:     TX9=0;
   765     0777  1683               	bsf	3,5	;RP0=1, select bank1
   766     0778  1303               	bcf	3,6	;RP1=0, select bank1
   767     0779  1318               	bcf	24,6	;volatile
   768     077A                     l682:
   769                           
   770                           ;newfile.c: 31:     TXEN=1;
   771     077A  1698               	bsf	24,5	;volatile
   772     077B                     l684:
   773                           
   774                           ;newfile.c: 32:     CREN=1;
   775     077B  1283               	bcf	3,5	;RP0=0, select bank0
   776     077C  1303               	bcf	3,6	;RP1=0, select bank0
   777     077D  1618               	bsf	24,4	;volatile
   778     077E                     l686:
   779                           
   780                           ;newfile.c: 35:     GIE = 1;
   781     077E  178B               	bsf	11,7	;volatile
   782     077F                     l688:
   783                           
   784                           ;newfile.c: 36:     PEIE= 1;
   785     077F  170B               	bsf	11,6	;volatile
   786     0780                     l690:
   787                           
   788                           ;newfile.c: 39:     RCIE=1;
   789     0780  1683               	bsf	3,5	;RP0=1, select bank1
   790     0781  1303               	bcf	3,6	;RP1=0, select bank1
   791     0782  168C               	bsf	12,5	;volatile
   792     0783                     l692:
   793                           
   794                           ;newfile.c: 40:     TXIE=1;
   795     0783  160C               	bsf	12,4	;volatile
   796     0784                     l45:
   797     0784  0008               	return
   798     0785                     __end_of_UART_Init:
   799     007E                     btemp	set	126	;btemp
   800     007E                     wtemp0	set	126
   801                           
   802                           	psect	idloc
   803                           
   804                           ;Config register IDLOC0 @ 0x2000
   805                           ;	unspecified, using default values
   806     2000                     	org	8192
   807     2000  3FFF               	dw	16383
   808                           
   809                           ;Config register IDLOC1 @ 0x2001
   810                           ;	unspecified, using default values
   811     2001                     	org	8193
   812     2001  3FFF               	dw	16383
   813                           
   814                           ;Config register IDLOC2 @ 0x2002
   815                           ;	unspecified, using default values
   816     2002                     	org	8194
   817     2002  3FFF               	dw	16383
   818                           
   819                           ;Config register IDLOC3 @ 0x2003
   820                           ;	unspecified, using default values
   821     2003                     	org	8195
   822     2003  3FFF               	dw	16383
   823                           
   824                           	psect	config
   825                           
   826                           ;Config register CONFIG @ 0x2007
   827                           ;	Oscillator Selection bits
   828                           ;	FOSC = HS, HS oscillator
   829                           ;	Watchdog Timer Enable bit
   830                           ;	WDTE = OFF, WDT disabled
   831                           ;	Power-up Timer Enable bit
   832                           ;	PWRTE = OFF, PWRT disabled
   833                           ;	FLASH Program Memory Code Protection bits
   834                           ;	CP = OFF, Code protection off
   835                           ;	Brown-out Reset Enable bit
   836                           ;	BOREN = OFF, BOR disabled
   837                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   838                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   839                           ;	Data EE Memory Code Protection
   840                           ;	CPD = OFF, Code Protection off
   841                           ;	FLASH Program Memory Write Enable
   842                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
   843                           ;	In-Circuit Debugger Mode bit
   844                           ;	DEBUG = 0x1, unprogrammed default
   845     2007                     	org	8199
   846     2007  3D3A               	dw	15674

Data Sizes:
    Strings     76
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Write_Text@st_print	PTR unsigned char  size(1) Largest target is 29
		 -> STR_5(CODE[20]), STR_4(CODE[14]), STR_3(CODE[20]), STR_2(CODE[13]), 
		 -> STR_1(CODE[29]), 


Critical Paths under _main in COMMON

    _main->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     285
                                              3 COMMON     4     4      0
                          _UART_Init
                          _UART_Read
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     2      0     225
                                              1 COMMON     2     2      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
   _UART_Read
   _UART_Write
   _UART_Write_Text
     _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Feb 27 19:23:00 2023

                      pc 0002                       l51 075C                       l45 0784  
                     l55 0765                       l48 0754                       l64 07A3  
                     l58 076A                       u10 075A                       u11 0759  
                     u20 0763                       u21 0762                       u30 0769  
                     u31 0768                       u70 07A3                       u71 07A2  
                     u80 07C7                       u81 07C6                       u90 07E3  
                     u91 07E2                       fsr 0004                      l740 0797  
                    l670 076B                      l734 0786                      l750 07C0  
                    l742 07A4                      l680 0777                      l672 0770  
                    l736 0787                      l760 07E3                      l752 07C7  
                    l744 07AA                      l690 0780                      l682 077A  
                    l674 0772                      l666 0754                      l738 0793  
                    l762 07E6                      l754 07CA                      l746 07AF  
                    l692 0783                      l684 077B                      l676 0773  
                    l668 075A                      l764 07F2                      l756 07D6  
                    l748 07B5                      l686 077E                      l678 0776  
                    l694 075D                      l758 07DC                      l688 077F  
                    l696 0763                      l698 0769                      _GIE 005F  
                    _RX9 00C6                      _TX9 04C6                      fsr0 0004  
                   STR_1 0009                     STR_2 0048                     STR_3 0026  
                   STR_4 003A                     STR_5 0026                     _BRGH 04C2  
                   _CREN 00C4                     _PEIE 005E                     _RCIE 0465  
                   _RCIF 0065                     _OERR 00C1                     _SPEN 00C7  
                   _TXIE 0464                     _TXEN 04C5                     _TXIF 0064  
                   _SYNC 04C4                     _main 07A4                     btemp 007E  
                   start 0000  __end_of_UART_Write_Text 07A4                    ?_main 0070  
                  _RCREG 001A                    _SPBRG 0099                    _TXREG 0019  
            ?_UART_Write 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0073          main@Enter_value 0075                   _TRISC6 043E  
                 _TRISC7 043F        __end_of_UART_Init 0785        __end_of_UART_Read 076B  
       ?_UART_Write_Text 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07A4             ??_UART_Write 0070               __stringtab 0003  
     __end_of_UART_Write 075D                  __ptext1 0785                  __ptext2 0753  
                __ptext3 075D                  __ptext4 076B     end_of_initialization 07FC  
              _UART_Init 076B                _UART_Read 075D                _PORTDbits 0008  
              _TRISDbits 0088               ?_UART_Init 0070               ?_UART_Read 0070  
    start_initialization 07FC                ___latbits 0002  UART_Write_Text@st_print 0072  
            ??_UART_Init 0070              ??_UART_Read 0070                __pstrings 0003  
      ??_UART_Write_Text 0071              __stringbase 0008       __end_of__stringtab 0009  
           UART_Write@ch 0070                stringcode 0003          _UART_Write_Text 0785  
               stringdir 0003                 stringtab 0003               _UART_Write 0753  
